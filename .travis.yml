# Travis CI script

dist: trusty
#sudo: false
language: cpp

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

addons:
  apt:
    sources:
      - george-edison55-precise-backports
    packages:
      - cmake-data
      - cmake

before_install: sudo apt-get update -qq

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update
  - sudo apt-get install gcc-8 g++-8 -y
  - gcc-8 --version
  - export CXX=g++-8

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz"
      mkdir cmake_install && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake_install
      ./cmake_install/bin/cmake --version
      export PATH=${PWD}/cmake_install/bin:${PATH}
      echo "Installed version"
      cmake --version
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
        which cmake || brew install cmake;
    fi
  - cmake --version

  #install catch2
  - git clone https://github.com/catchorg/Catch2.git
  - cd Catch2
  - cmake -Bbuild -H. -DBUILD_TESTING=OFF
  - cd build && make
  - sudo make install
  - cd ../..

  #catch2 dependency
  - cd test/src
  - curl -O https://raw.githubusercontent.com/catchorg/Catch2/v2.7.0/single_include/catch2/catch.hpp
  - cd ../..

  #FSeam Python generator dependencies
  - sudo apt-get install python3-pip
  - sudo pip install ply

  # Use Debug builds for running Valgrind and building examples
  #  - cmake -H. -BBuild-Debug -DCMAKE_BUILD_TYPE=Debug -DTRAVIS_BUILD=ON
  # Don't bother with release build for coverage build
  - cmake -H. -BBuild-Release -DCMAKE_BUILD_TYPE=Release -DTRAVIS_BUILD=ON

script:
  - cd Build-Release
  - cat test/FSeamMockData.hpp
  - make -j 2
